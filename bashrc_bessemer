sacctu() {
            sacct --user="$1" --format=Account,AveCPU,AveRSS,AveVMSize,CPUTime,Elapsed,ExitCode,JobID,JobName,MaxRSS,MaxVMSize,MaxDiskRead,MaxDiskWrite,ReqCPUS,ReqMem,ReqNodes,NCPUS,NNodes;
 }

sstatu() {
            sstat --jobs="$1" --format=AveCPU,AveRSS,AveVMSize,JobID,MaxRSS,MaxVMSize,NTasks;
 }
 
jobinfo() {
    echo -e "\n###################### Failed jobs scripts ####################### \n"
    sacct --format="JobID,JobName%50,State,ExitCode,Start,End" --state=FAILED -j $1
    echo -e "\n########################### In queue ############################# \n"
    squeue -j $1
    echo -e "\n########################## Finished jobs ########################## \n"
    sacct --format="JobID,JobName%50,State,ExitCode,Start,End" --state=COMPLETED -j $1
}

userinfo() {
    clear
    echo -e "\n##################### Recently finished jobs ###################### \n"
    sacct -u $1 --format=JobID,JobName,Partition,AllocCPUS,State,ExitCode,Start,End,Elapsed

    echo -e "\n############################ CANCELLED ############################ \n"
    sacct -u $1 --state CANCELLED --format=JobID,JobName,Partition,AllocCPUS,State,ExitCode,Start,End,Elapsed

    echo -e "\n########################### Processes ############################# \n" 
    ps aux | grep $1

    echo -e "\n############################# squeue ############################## \n"
    squeue -u $1

    eval df -h "~$1"
}

modep() {
 	if [[ $# -eq 0 ]]; then
        	echo "Usage: modep <module_name>"
    	else
		grep -rl "$1" /usr/local/modulefiles/
		num=$(grep -rl "$1" /opt/apps/testapps/el7/modules/ | wc -l)
                echo -e "$num Dependant modules:"
		echo -e "\nModule loads:"
	    	module show "$1" |& sed -n 's/^module\s\+load\s\+\(.*\)$/\1/p'
	fi
 }

