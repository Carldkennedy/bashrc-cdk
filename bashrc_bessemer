sacctu() {
            sacct --user="$1" --format=Account,AveCPU,AveRSS,AveVMSize,CPUTime,Elapsed,ExitCode,JobID,JobName,MaxRSS,MaxVMSize,MaxDiskRead,MaxDiskWrite,ReqCPUS,ReqMem,ReqNodes,NCPUS,NNodes;
 }

sstatu() {
            sstat --jobs="$1" --format=AveCPU,AveRSS,AveVMSize,JobID,MaxRSS,MaxVMSize,NTasks;
 }
 
jobinfo() {
    echo -e "\n###################### Failed jobs scripts ####################### \n"
    sacct --format="JobID,JobName%50,State,ExitCode,Start,End" --state=FAILED -j $1
    echo -e "\n########################### In queue ############################# \n"
    squeue -j $1
    echo -e "\n########################## Finished jobs ########################## \n"
    sacct --format="JobID,JobName%50,State,ExitCode,Start,End" --state=COMPLETED -j $1
}

userinfo() {
    clear
    echo -e "\n##################### Recently finished jobs ###################### \n"
    sacct -u $1 --format=JobID,JobName,Partition,AllocCPUS,State,ExitCode,Start,End,Elapsed

    echo -e "\n############################ CANCELLED ############################ \n"
    sacct -u $1 --state CANCELLED --format=JobID,JobName,Partition,AllocCPUS,State,ExitCode,Start,End,Elapsed

    echo -e "\n########################### Processes ############################# \n" 
    ps aux | grep $1

    echo -e "\n############################# squeue ############################## \n"
    squeue -u $1

    eval df -h "~$1"
}

modep() { #Bessemer
	    if [[ $# -eq 0 ]]; then
		   echo "Usage: modep <module_name>. This function is case sensitive!"
	    else
		   modules=($(module -t avail 2>&1 $1))
		   for module in "${modules[@]}"; do
			echo "$module"
			num_slashes=$(echo "$module" | tr -dc '/' | wc -c)
    			if [[ "$num_slashes" -ge 6 ]]; then
				search_dir="$(echo "$module" | cut -d/ -f1-6)"
			else
				modepx "$module" "$search_dir"
		   	fi
		   done
	    fi
}

modepx() { #Bessemr
	    deps=($(grep -rl "^    module load ${1}" "${2}/" | awk -F"/" '{printf("%s/%s\n", $(NF-1), $NF)}' | sed 's|^/||'))

	    if [[ -n "$3" ]]; then
		color=$((31 + $3 % 7))
	    else
		color=31
	    fi

	    for dep in "${deps[@]}"; do
		if [[ "$dep" == *.bak* ]]; then
		    continue
		fi
		dir=$(dirname "$dep")
		file=$(basename "$dep")
		echo -e " \e[${color}m$dir/$file\e[0m"
		modepx "$dir/$file" "$2" $((color + 1)) 
	    done
}
