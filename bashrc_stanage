#source /opt/apps/testapps/el7/software/staging/Lmod/7.3/lmod/7.3/init/bash
#module use /opt/apps/testapps/common/modules/all/
#module use /opt/apps/testapps/el7/modules/staging/all/

module load git/2.39.2-GCCcore-12.2.0-nodocs

sacctu() {
            sacct --user="$1" --format=Account,AveCPU,AveRSS,AveVMSize,CPUTime,Elapsed,ExitCode,JobID,JobName,MaxRSS,MaxVMSize,MaxDiskRead,MaxDiskWrite,ReqCPUS,ReqMem,ReqNodes,NCPUS,NNodes;
 }

sstatu() {
            sstat --jobs="$1" --format=AveCPU,AveRSS,AveVMSize,JobID,MaxRSS,MaxVMSize,NTasks;
 }
 
jobinfo() {
    echo -e "\n###################### Failed jobs scripts ####################### \n"
    sacct --format="JobID,JobName%50,State,ExitCode,Start,End" --state=FAILED -j $1
    echo -e "\n########################### In queue ############################# \n"
    squeue -j $1
    echo -e "\n########################## Finished jobs ########################## \n"
    sacct --format="JobID,JobName%50,State,ExitCode,Start,End" --state=COMPLETED -j $1
}


modl() {
	if [[ $# -eq 0 ]]; then
        	echo "Usage: modl <module_name>"
    	else
	    	module spider "$1" 2>&1 | grep "       " | sed  -e 's/^/module load /' | sed 's/  */ /g'
	fi
 }
 
modep_orig() {
        if [[ $# -eq 0 ]]; then
                echo "Usage: modep <module_name>"
        else
                grep -rl "^    load(\"$1" /opt/apps/testapps/el7/modules/staging/
                num=$(grep -rl "^    load(\"$1" /opt/apps/testapps/el7/modules/staging/ | wc -l)
		grep -rl "^    load(\"$1" /opt/apps/testapps/el7/modules/staging/ | awk -F"/" '{printf("%s/%s\n", $(NF-1), $NF)}' | sed 's/\.lua$//'
		echo -e "are the $num dependant modules."
                echo -e "\nModule loads:"
                module show "$1" |& grep load | sed -n 's/^load("\(.*\)")$/\1/p'
		echo -e "\nModule loads:"
                module show "$1" |& grep load | sed -n 's/^load("\(.*\)")$/\1/p' | grep -o ".*\/$1\/.*" | sort -u
        fi
 }

modept_orig() {
        if [[ $# -eq 0 ]]; then
                echo "Usage: modep <module_name>"
        else
                grep -rl "^    load(\"$1" /opt/apps/testapps/el7/modules/staging/*/
                num=$(grep -rl "^    load(\"$1" /opt/apps/testapps/el7/modules/staging/ | wc -l)
                echo -e "are the $num dependant modules."
                echo -e "\nModule loads:"
                module show "$1" |& grep load | sed -n 's/^load("\(.*\)")$/\1/p'
		echo -e "\nModule loads:"
                module show "$1" |& grep load | sed -n 's/^load("\(.*\)")$/\1/p' | grep -o ".*\/$1\/.*" | sort -u
        fi
 }
 
modep() {
   	if [[ $# -eq 0 ]]; then
                echo "Usage: modep <module_name>"
   	else
	   	modules=($(module -t --redirect avail 2>&1 $1))
	   	for module in "${modules[@]}"; do
			echo "$module"
			modepx "$module"
	   	done
	fi
}

modepx() {
    deps=($(grep -rl "^    load(\"$1" /opt/apps/testapps/el7/modules/staging/ | awk -F"/" '{printf("%s/%s\n", $(NF-1), $NF)}' | sed 's/\.lua$//' | sed 's|^/||'))

    if [[ -n "$2" ]]; then
        color=$((31 + $2 % 7))
    else
        color=31
    fi

    for dep in "${deps[@]}"; do
        if [[ "$dep" == *.bak* ]]; then
            continue
        fi
        dir=$(dirname "$dep")
        file=$(basename "$dep")
        echo -e "\e[${color}m$dir/$file\e[0m"
        modepx "$dir/$file" $((color + 1))
    done
}



lmodiff() {
	module -t --redirect avail 2>&1 > cached_modules.txt
	IFS=":" read -ra module_paths <<< "$MODULEPATH"
	rm -f installed_modules.txt
	for path in "${module_paths[@]}"; do
	  find "$path" -type f -name "*.lua" -printf "%P\n" | sed "s/\.lua$//" | sed "s/\//\//g" >> installed_modules.txt
	done
	sort cached_modules.txt -o cached_modules.txt
	sort installed_modules.txt -o installed_modules.txt
	diff cached_modules.txt installed_modules.txt
	rm cached_modules.txt installed_modules.txt
 }
